{
    "sourceFile": "csv_to_nested_json.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1649299088994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1649299155876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,5 +26,5 @@\n         pizza_info['price']=f[['price']]\n         flavors[flavor]=pizza_info\n     sizes[size]=flavors\n     \n-print(sizes)\n\\ No newline at end of file\n+print(sizes['bambi'])\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649299641649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,5 +26,5 @@\n         pizza_info['price']=f[['price']]\n         flavors[flavor]=pizza_info\n     sizes[size]=flavors\n     \n-print(sizes['bambi'])\n\\ No newline at end of file\n+print(sizes['Chica']['Bambi']['price'])\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649300054885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,5 +26,5 @@\n         pizza_info['price']=f[['price']]\n         flavors[flavor]=pizza_info\n     sizes[size]=flavors\n     \n-print(sizes['Chica']['Bambi']['price'])\n\\ No newline at end of file\n+print(sizes['Chica']['Bambi']['price']['price'])\n"
                },
                {
                    "date": 1649300087416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n         f=s[s['flavor']==flavor]\n         pizza_info={}\n         pizza_info['name']=f[['name']]\n         pizza_info['ingredient']=f[['ingredient']]\n-        pizza_info['price']=f[['price']]\n+        pizza_info['price']=int(f[['price']])\n         flavors[flavor]=pizza_info\n     sizes[size]=flavors\n     \n print(sizes['Chica']['Bambi']['price']['price'])\n"
                },
                {
                    "date": 1649300116227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,11 @@\n     for flavor, group2 in csv.groupby('flavor'):\n         s=csv[csv['size']==size]\n         f=s[s['flavor']==flavor]\n         pizza_info={}\n-        pizza_info['name']=f[['name']]\n-        pizza_info['ingredient']=f[['ingredient']]\n-        pizza_info['price']=int(f[['price']])\n+        pizza_info['name']=f[['name']][0]\n+        pizza_info['ingredient']=f[['ingredient']][0]\n+        pizza_info['price']=int(f[['price']][0])\n         flavors[flavor]=pizza_info\n     sizes[size]=flavors\n     \n print(sizes['Chica']['Bambi']['price']['price'])\n"
                },
                {
                    "date": 1649308379522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,22 +9,34 @@\n            'flavor',\n            'name',\n            'ingredient',\n            'price'])\n-sizes={}\n-for size, group in csv.groupby('size'):\n-    sizes[size]=csv[csv['size']==size]\n-    flavors={}\n-    name={}\n-    ingredient={}\n-    price={}\n-    for flavor, group2 in csv.groupby('flavor'):\n-        s=csv[csv['size']==size]\n-        f=s[s['flavor']==flavor]\n-        pizza_info={}\n-        pizza_info['name']=f[['name']][0]\n-        pizza_info['ingredient']=f[['ingredient']][0]\n-        pizza_info['price']=int(f[['price']][0])\n-        flavors[flavor]=pizza_info\n-    sizes[size]=flavors\n-    \n-print(sizes['Chica']['Bambi']['price']['price'])\n+\n+def csv_to_dictionary(column_names:list)->dict:\n+    sizes={}\n+    sizes_list=list(csv['size'].unique())\n+    flavors_list=list(csv['flavor'].head().unique())\n+    for size in sizes_list:\n+        sizes[size]=csv[csv['size']==size]\n+        flavors={}\n+        name={}\n+        ingredient={}\n+        price={}\n+        for flavor in flavors_list:\n+            s=csv[csv['size']==size]\n+            f=s[s['flavor']==flavor]\n+            pizza_info={}\n+            try:\n+                x=0\n+                pizza_info['name']=(f['name'].values)[x]\n+                pizza_info['ingredient']=(f['ingredient']).values[x]\n+                pizza_info['price']=float((f['price'].values)[x])\n+                flavors[flavor]=pizza_info\n+            except Exception as e:\n+                continue\n+        sizes[size]=flavors\n+    sizes.pop('size')    \n+    return sizes\n+\n+def dictionary_to_json():\n+    with open(\"functions/pizzas.json\",\"w\") as outfile:\n+        json.dump(csv_to_dictionary(['size','flavor','name','ingredient','price']),outfile,indent=4,ensure_ascii=False)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649310015988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import json\n import pandas as pd\n+from sqlalchemy import Column\n \n csv=pd.read_csv(\n     './pizzas.csv',\n     encoding='utf-8',\n@@ -11,8 +12,51 @@\n            'ingredient',\n            'price'])\n \n def csv_to_dictionary(column_names:list)->dict:\n+    \"\"\"Converts a csv file into a python dictionary with the following\n+        structure:\n+\n+        {\n+            \"mini\":\n+                {\n+                    \"arabe\":\n+                        {\n+                            \"name\":\"Árabe (Mini)\",\n+                            \"ingredients\":\"Carne de tacos árabes, cebolla, pimiento morrón\",\n+                            \"price\":95\n+                        },              \n+                    \"bambi\":\n+                        {\n+                            \"name\":\"Bambi (Mini)\",\n+                            \"ingredients\":\"Jamon, salchicha, chorizo, tocino, piña, cebolla, pimiento morrón\",\n+                            \"price\":75\n+                        }\n+                },\n+            \"chica\":\n+                {\n+                    \"arabe\":\n+                        {\n+                            \"name\":\"Árabe (Chica)\",\n+                            \"ingredients\":\"Carne de tacos árabes, cebolla, pimiento morrón\",\n+                            \"price\":130\n+                        },              \n+                    \"bambi\":\n+                        {\n+                            \"name\":\"Bambi (Chica)\",\n+                            \"ingredients\":\"Jamon, salchicha, chorizo, tocino, piña, cebolla, pimiento morrón\",\n+                            \"price\":110\n+                        }\n+                }     \n+        }\n+\n+\n+    Args:\n+        column_names (list): This is a list with the column names of the csv file.\n+\n+    Returns:\n+        dict: A dictionary file with a double nested format.\n+    \"\"\"\n     sizes={}\n     sizes_list=list(csv['size'].unique())\n     flavors_list=list(csv['flavor'].head().unique())\n     for size in sizes_list:\n@@ -25,18 +69,29 @@\n             s=csv[csv['size']==size]\n             f=s[s['flavor']==flavor]\n             pizza_info={}\n             try:\n-                x=0\n-                pizza_info['name']=(f['name'].values)[x]\n-                pizza_info['ingredient']=(f['ingredient']).values[x]\n-                pizza_info['price']=float((f['price'].values)[x])\n+                pizza_info['name']=(f['name'].values)[0]\n+                pizza_info['ingredient']=(f['ingredient']).values[0]\n+                pizza_info['price']=float((f['price'].values)[0])\n                 flavors[flavor]=pizza_info\n-            except Exception as e:\n+            except Exception:\n                 continue\n         sizes[size]=flavors\n     sizes.pop('size')    \n     return sizes\n\\ No newline at end of file\n \n-def dictionary_to_json():\n-    with open(\"functions/pizzas.json\",\"w\") as outfile:\n-        json.dump(csv_to_dictionary(['size','flavor','name','ingredient','price']),outfile,indent=4,ensure_ascii=False)\n+def dictionary_to_json(python_dictionary:dict, column_list:list)->json:\n+    \"\"\"Converts a python dictionary into a nested json file.\n+\n+    Args:\n+        python_dictionary (dict): This is the relative path of the csv file to be converted.\n+        column_list (list): This is a list with the column names of the csv file.\n+\n+    Returns:\n+        json: This is a json file with a two nested format.\n+    \"\"\"\n+    with open(python_dictionary,\"w\") as outfile:\n+        json.dump(csv_to_dictionary(column_list),outfile,indent=4,ensure_ascii=False)\n+\n+python_dictionary = \"functions/pizzas.json\"\n+column_list = ['size','flavor','name','ingredient','price']\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649310092312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,10 +56,10 @@\n     Returns:\n         dict: A dictionary file with a double nested format.\n     \"\"\"\n     sizes={}\n-    sizes_list=list(csv['size'].unique())\n-    flavors_list=list(csv['flavor'].head().unique())\n+    sizes_list=list(csv[column_names[0]].unique())\n+    flavors_list=list(csv[column_names[1]].head().unique())\n     for size in sizes_list:\n         sizes[size]=csv[csv['size']==size]\n         flavors={}\n         name={}\n"
                },
                {
                    "date": 1649310334963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,6 +92,8 @@\n     \"\"\"\n     with open(python_dictionary,\"w\") as outfile:\n         json.dump(csv_to_dictionary(column_list),outfile,indent=4,ensure_ascii=False)\n \n-python_dictionary = \"functions/pizzas.json\"\n-column_list = ['size','flavor','name','ingredient','price']\n\\ No newline at end of file\n+if '__name__' ==   'main':\n+    python_dictionary = \"functions/pizzas.json\"\n+    column_list = ['size','flavor','name','ingredient','price']\n+    dictionary_to_json(python_dictionary,column_list)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649310513379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,8 @@\n     \"\"\"\n     with open(python_dictionary,\"w\") as outfile:\n         json.dump(csv_to_dictionary(column_list),outfile,indent=4,ensure_ascii=False)\n \n-if '__name__' ==   'main':\n-    python_dictionary = \"functions/pizzas.json\"\n-    column_list = ['size','flavor','name','ingredient','price']\n-    dictionary_to_json(python_dictionary,column_list)\n\\ No newline at end of file\n+\n+python_dictionary = \"functions/pizzas.json\"\n+column_list = ['size','flavor','name','ingredient','price']\n+dictionary_to_json(python_dictionary,column_list)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649310721065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,7 +93,7 @@\n     with open(python_dictionary,\"w\") as outfile:\n         json.dump(csv_to_dictionary(column_list),outfile,indent=4,ensure_ascii=False)\n \n \n-python_dictionary = \"functions/pizzas.json\"\n+python_dictionary = \"pizzas.json\"\n column_list = ['size','flavor','name','ingredient','price']\n dictionary_to_json(python_dictionary,column_list)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1649312114812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                 pizza_info['ingredient']=(f['ingredient']).values[0]\n                 pizza_info['price']=float((f['price'].values)[0])\n                 flavors[flavor]=pizza_info\n             except Exception:\n-                continue\n+                pass\n         sizes[size]=flavors\n     sizes.pop('size')    \n     return sizes\n \n"
                },
                {
                    "date": 1649312213367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         dict: A dictionary file with a double nested format.\n     \"\"\"\n     sizes={}\n     sizes_list=list(csv[column_names[0]].unique())\n-    flavors_list=list(csv[column_names[1]].head().unique())\n+    flavors_list=list(csv[column_names[1]].unique())\n     for size in sizes_list:\n         sizes[size]=csv[csv['size']==size]\n         flavors={}\n         name={}\n"
                },
                {
                    "date": 1649316318268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import json\n import pandas as pd\n-from sqlalchemy import Column\n \n csv=pd.read_csv(\n     './pizzas.csv',\n     encoding='utf-8',\n"
                }
            ],
            "date": 1649299088994,
            "name": "Commit-0",
            "content": "import json\nimport pandas as pd\n\ncsv=pd.read_csv(\n    './pizzas.csv',\n    encoding='utf-8',\n    sep=',',\n    names=['size',\n           'flavor',\n           'name',\n           'ingredient',\n           'price'])\nsizes={}\nfor size, group in csv.groupby('size'):\n    sizes[size]=csv[csv['size']==size]\n    flavors={}\n    name={}\n    ingredient={}\n    price={}\n    for flavor, group2 in csv.groupby('flavor'):\n        s=csv[csv['size']==size]\n        f=s[s['flavor']==flavor]\n        pizza_info={}\n        pizza_info['name']=f[['name']]\n        pizza_info['ingredient']=f[['ingredient']]\n        pizza_info['price']=f[['price']]\n        flavors[flavor]=pizza_info\n    sizes[size]=flavors\n    \nprint(sizes)"
        }
    ]
}